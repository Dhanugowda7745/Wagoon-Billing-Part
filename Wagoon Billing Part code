#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN);

const int remove_button = 2;
const int add_button = 3;
const int reset_button = 4;
const int buzzer_Pin = 5;

unsigned long lastActionTime = 0;
const unsigned long idleTimeout = 6000;

int bill_amount = 0;
int add_item_flag = 1;
int remove_item_flag = 0;
bool bill_shown = false;

struct item {
  String item_name;
  String item_number;
  int item_price;
  int item_count;
};

const int number_of_item = 7;
item item_list[number_of_item] = {
  {"Pen",     "34 20 AB A7", 10, 0},
  {"Book",    "C3 A7 34 24", 30, 0},
  {"Water",   "ED 65 F6 3B", 20, 0},
  {"Rice",    "43 E8 4E E4", 80, 0},
  {"Shoe",    "D4 47 F7 1E", 500, 0},
  {"Bottle",  "D4 65 FF 1E", 700, 0},
  {"Bag",     "34 EF 08 1F", 200, 0},
};

void setup() {
  pinMode(remove_button, INPUT);
  pinMode(add_button, INPUT);
  pinMode(reset_button, INPUT);
  pinMode(buzzer_Pin, OUTPUT);
  digitalWrite(buzzer_Pin, LOW);

  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();

  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0); lcd.print("Smart Trolley");
  lcd.setCursor(0, 1); lcd.print("Billing System");
  delay(2000);
  lcd.clear(); lcd.setCursor(0, 0);
  lcd.print("Start shopping...");
  delay(2000);

  lastActionTime = millis();
}

void loop() {
  if (digitalRead(add_button)) {
    add_item_flag = 1;
    remove_item_flag = 0;
    lcd.clear(); lcd.setCursor(0, 0);
    lcd.print("You can now add");
    lcd.setCursor(0, 1); lcd.print("items");
    delay(1500);
    showTotal();
    lastActionTime = millis();
    bill_shown = false;
  }

  if (digitalRead(remove_button)) {
    add_item_flag = 0;
    remove_item_flag = 1;
    lcd.clear(); lcd.setCursor(0, 0);
    lcd.print("You can now");
    lcd.setCursor(0, 1); lcd.print("remove items");
    delay(1500);
    showTotal();
    lastActionTime = millis();
    bill_shown = false;
  }

  if (digitalRead(reset_button)) {
    bill_amount = 0;
    bill_shown = false;
    for (int i = 0; i < number_of_item; i++) item_list[i].item_count = 0;
    lcd.clear(); lcd.setCursor(0, 0);
    lcd.print("Thanks for");
    lcd.setCursor(0, 1); lcd.print("shopping!");
    delay(2000);
    lcd.clear(); lcd.setCursor(0, 0);
    lcd.print("Visit again...");
    delay(2000);
    lcd.clear(); lcd.setCursor(0, 0);
    lcd.print("Start shopping...");
    delay(1500);
    lastActionTime = millis();
  }

  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String content = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : ""));
      content.concat(String(mfrc522.uid.uidByte[i], HEX));
      if (i < mfrc522.uid.size - 1) content.concat(" ");
    }
    content.toUpperCase();
    Serial.println("Scanned UID: " + content);

    for (int i = 0; i < number_of_item; i++) {
      if (content == item_list[i].item_number) {

        if (add_item_flag) {
          beepOnce();
          item_list[i].item_count++;
          bill_amount += item_list[i].item_price;
          lcd.clear();
          lcd.setCursor(0, 0); lcd.print("Added: ");
          lcd.print(item_list[i].item_name);
          lcd.setCursor(0, 1); lcd.print("Qty: ");
          lcd.print(item_list[i].item_count);
        } 
        else if (remove_item_flag && item_list[i].item_count > 0) {
          beepTwice();
          item_list[i].item_count--;
          bill_amount -= item_list[i].item_price;
          lcd.clear();
          lcd.setCursor(0, 0); lcd.print("Removed: ");
          lcd.print(item_list[i].item_name);
          lcd.setCursor(0, 1); lcd.print("Qty: ");
          lcd.print(item_list[i].item_count);
        } 
        else {
          lcd.clear(); lcd.setCursor(0, 0);
          lcd.print("Cannot remove:");
          lcd.setCursor(0, 1); lcd.print("Not in list");
        }

        delay(2000);
        showTotal();
        lastActionTime = millis();
        bill_shown = false;
        break;
      }
    }

    mfrc522.PICC_HaltA();
    mfrc522.PCD_StopCrypto1();
  }

  if (!bill_shown && (millis() - lastActionTime >= idleTimeout)) {
    showFinalBill();
    bill_shown = true;
  }
}

void beepOnce() {
  digitalWrite(buzzer_Pin, HIGH);
  delay(100);
  digitalWrite(buzzer_Pin, LOW);
}

void beepTwice() {
  for (int i = 0; i < 2; i++) {
    digitalWrite(buzzer_Pin, HIGH);
    delay(100);
    digitalWrite(buzzer_Pin, LOW);
    delay(100);
  }
}

void showTotal() {
  lcd.clear();
  lcd.setCursor(0, 0); lcd.print("Total Billing:");
  lcd.setCursor(0, 1); lcd.print(bill_amount); lcd.print(" Rs");
  delay(2000);
}

void showFinalBill() {
  lcd.clear();
  lcd.setCursor(0, 0); lcd.print("Final Bill:");
  delay(1500);
  for (int i = 0; i < number_of_item; i++) {
    if (item_list[i].item_count > 0) {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(item_list[i].item_name); lcd.print(" x");
      lcd.print(item_list[i].item_count);
      lcd.setCursor(0, 1);
      lcd.print("Rs: ");
      lcd.print(item_list[i].item_price * item_list[i].item_count);
      delay(2500);
    }
  }
  lcd.clear();
  lcd.setCursor(0, 0); lcd.print("Total: ");
  lcd.print(bill_amount); lcd.print(" Rs");
  delay(3000);
}
